<?php

namespace App\Filament\Central\Resources;

use App\Filament\Central\Resources\NewsCategoryResource\Pages;
use App\Models\Central\NewsCategory;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;

class NewsCategoryResource extends Resource
{
    protected static ?string $model = NewsCategory::class;

    protected static ?string $navigationIcon = 'heroicon-o-folder';

    protected static ?int $navigationSort = 2;

    public static function getNavigationGroup(): ?string
    {
        return 'Content';
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Section::make('Kategorie Information')
                    ->schema([
                        Forms\Components\TextInput::make('name.hr')
                            ->label('ðŸ‡­ðŸ‡· Name (Kroatisch)')
                            ->required()
                            ->maxLength(255),

                        Forms\Components\TextInput::make('name.de')
                            ->label('ðŸ‡©ðŸ‡ª Name (Deutsch)')
                            ->maxLength(255),

                        Forms\Components\TextInput::make('name.en')
                            ->label('ðŸ‡¬ðŸ‡§ Name (Englisch)')
                            ->maxLength(255),

                        Forms\Components\TextInput::make('slug')
                            ->label('Slug')
                            ->disabled()
                            ->dehydrated(false)
                            ->helperText('Wird automatisch generiert'),

                        Forms\Components\Textarea::make('description.hr')
                            ->label('ðŸ‡­ðŸ‡· Beschreibung (Kroatisch)')
                            ->rows(3)
                            ->columnSpanFull(),

                        Forms\Components\Textarea::make('description.de')
                            ->label('ðŸ‡©ðŸ‡ª Beschreibung (Deutsch)')
                            ->rows(3)
                            ->columnSpanFull(),
                    ])
                    ->columns(2),

                Forms\Components\Section::make('Design')
                    ->schema([
                        Forms\Components\TextInput::make('icon')
                            ->label('Icon')
                            ->helperText('Heroicon name, z.B. "rocket-launch"')
                            ->placeholder('sparkles'),

                        Forms\Components\ColorPicker::make('color')
                            ->label('Farbe')
                            ->default('#3b82f6'),

                        Forms\Components\TextInput::make('order')
                            ->label('Sortierung')
                            ->numeric()
                            ->default(0)
                            ->helperText('Kleinere Zahlen erscheinen zuerst'),

                        Forms\Components\Toggle::make('is_active')
                            ->label('Aktiv')
                            ->default(true)
                            ->helperText('Nur aktive Kategorien werden angezeigt'),
                    ])
                    ->columns(2),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name')
                    ->label('Name')
                    ->searchable()
                    ->sortable(),

                Tables\Columns\TextColumn::make('slug')
                    ->label('Slug')
                    ->searchable()
                    ->badge()
                    ->color('gray'),

                Tables\Columns\IconColumn::make('icon')
                    ->label('Icon')
                    ->icon(fn ($record) => 'heroicon-o-' . ($record->icon ?? 'folder')),

                Tables\Columns\ColorColumn::make('color')
                    ->label('Farbe'),

                Tables\Columns\TextColumn::make('news_count')
                    ->label('Anzahl News')
                    ->counts('news')
                    ->badge()
                    ->color('success'),

                Tables\Columns\TextColumn::make('order')
                    ->label('Sortierung')
                    ->sortable(),

                Tables\Columns\IconColumn::make('is_active')
                    ->label('Aktiv')
                    ->boolean()
                    ->sortable(),

                Tables\Columns\TextColumn::make('created_at')
                    ->label('Erstellt')
                    ->dateTime()
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                Tables\Filters\TernaryFilter::make('is_active')
                    ->label('Aktiv')
                    ->placeholder('Alle')
                    ->trueLabel('Nur aktive')
                    ->falseLabel('Nur inaktive'),
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->defaultSort('order');
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListNewsCategories::route('/'),
            'create' => Pages\CreateNewsCategory::route('/create'),
            'edit' => Pages\EditNewsCategory::route('/{record}/edit'),
        ];
    }

    public static function getNavigationLabel(): string
    {
        return 'News-Kategorien';
    }

    public static function getPluralLabel(): string
    {
        return 'News-Kategorien';
    }

    public static function getLabel(): string
    {
        return 'News-Kategorie';
    }
}
